{"version":3,"sources":["logo.svg","components/card/card.components.jsx","components/card-list/card-list.components.jsx","components/search/search.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","map","monsters","SearchBox","placeholder","handleEvent","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,wBCGFA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCHXC,EAAW,SAACP,GAAD,OACtB,sBAAKC,UAAU,YAAf,UACCD,EAAMG,QAAQK,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAwBN,QAASM,GAAtBA,EAASL,OAFxB,QCFWM,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,YAAd,OAEf,uBACAX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BHG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAMFH,YAAY,SAAAI,GACV,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SANpC,EAAKC,MAAQ,CACXlB,QAAS,GACTe,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAEd,QAASuB,S,oBAI7C,WACE,MAAiCC,KAAKN,MAA9BlB,EAAR,EAAQA,QAASe,EAAjB,EAAiBA,YACXU,EAAmBzB,EAAQ0B,QAAO,SAACb,GAAD,OACtCA,EAAEX,KAAKyB,cAAcC,SAASb,EAAYY,kBAE5C,OACE,sBAAK7B,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACEU,YAAY,kBACZC,YAAae,KAAKf,cAEpB,cAAC,EAAD,CAAUT,QAASyB,W,GA9BTI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4a434a29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport './card.styles.css';\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n  </div>\n)\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport {Card} from \"../card/card.components\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n  {props.monster.map((monsters) => (\n      <Card key={monsters.id} monster={monsters}/>\n      ))};\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.styles.css\"\n\nexport const SearchBox=({placeholder,handleEvent})=>(\n   \n        <input \n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleEvent}></input>\n   \n)","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.components\";\nimport {SearchBox} from \"./components/search/search.components\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: [],\n      searchField: \"\",\n    };\n  }\n  handleEvent=e=>{\n    this.setState({searchField:e.target.value});\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((user) => this.setState({ monster: user }));\n  }\n  //http://139.59.244.121/my_items\n  //https://jsonplaceholder.typicode.com/users\n  render() {\n    const { monster, searchField } = this.state;\n    const filteredMonsters = monster.filter((e) =>\n      e.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleEvent={this.handleEvent}\n        />\n        <CardList monster={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}